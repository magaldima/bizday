syntax = "proto3";
package github.com.magaldima.bizday.api;

enum WeekDays {
    Sunday = 0;
    Monday = 1;
    Tuesday = 2;
    Wednesday = 3;
    Thursday = 4;
    Friday = 5;
    Saturday = 6;
}

enum Month {
    January = 0;
    February = 1;
    March = 2;
    April = 3;
    May = 4;
    June = 5;
    July = 6;
    August = 7;
    September = 8;
    October = 9;
    November = 10;
    December = 11;
}

message Date {
    int32 year = 1;
    Month month = 2;
    int32 day = 3;
}

message HolidayCalendar {
    string name = 1;
    repeated Date holidays = 2;
}

// Binary Messages
message BinaryDateRequest {
    HolidayCalendar cal = 1;
    Date start = 2;
    Date end = 3;
}

message NumberOfDaysResponse {
    int32 days = 1;
}

// Unary Date Retrieval Messages
message UnaryDateRequest {
    HolidayCalendar cal = 1;
    Date date = 2;
}

message UnaryBoolResponse {
    bool ok = 1;
}

message UnaryDateResponse {
    Date date = 1 ;
}

// Unary Date Transformation
// offset can be positive or negative resulting in an addition or substraction of days
message UnaryTransformRequest {
    HolidayCalendar cal = 1;
    Date date = 2;
    int32 offset = 3;
}

service DateCalc {

    // Calculates the number of business days between two dates.
    // This operates like array operations and is inclusive of the start and exclusive of the end.
    rpc BizDaysBetween (BinaryDateRequest) returns (NumberOfDaysResponse);

    // Calculates the number of weekdays between two dates.
    rpc WeekdaysBetween (BinaryDateRequest) returns (NumberOfDaysResponse);

    // Calculates the number of weekend days between two dates.
    rpc WeekendsBetween (BinaryDateRequest) returns (NumberOfDaysResponse);

    // Calculates the number of holidays between two dates.
    rpc HolidaysBetween (BinaryDateRequest) returns (NumberOfDaysResponse);

    // Calculates the number of business days in the month of the date provided
    rpc BizDaysInMonth (UnaryDateRequest) returns (NumberOfDaysResponse);

    // Calculates the number of business days in the year of the date provided
    rpc BizDaysInYear (UnaryDateRequest) returns (NumberOfDaysResponse);

    // Unary Bool APIs

    // Calculates if the date provided is neither a weekend nor a holiday
    rpc IsBizDay (UnaryDateRequest) returns (UnaryBoolResponse);

    // Calculates if the date provided is the first business day of the month
    rpc IsFirstBizDayOfMonth (UnaryDateRequest) returns (UnaryBoolResponse);

    // Calculates if the date provided is the last business day of the month
    rpc IsLastBizDayOfMonth (UnaryDateRequest) returns (UnaryBoolResponse);

    // Unary Date Retrieval APIs

    // Calculates the first business day of the month of the date provided
    rpc FirstBizDayOfMonth (UnaryDateRequest) returns (UnaryDateResponse);

    // Calculates the last business day of the month of the date provided
    rpc LastBizDayOfMonth (UnaryDateRequest) returns (UnaryDateResponse);

    // Calculates the first business day of the quarter
    rpc FirstBizDayOfQtr (UnaryDateRequest) returns (UnaryDateResponse);

    // Calculates the last business day of the quarter
    rpc LastBizDayOfQtr (UnaryDateRequest) returns (UnaryDateResponse);

    // Calculates the next business day after the date provided
    rpc NextBizDay (UnaryDateRequest) returns (UnaryDateResponse);

    // Calculates the previous business day before the date provided
    rpc PrevBizDay (UnaryDateRequest) returns (UnaryDateResponse);

    // Unary Date Transformation APIs

    // Add a number of business days to the date provided
    rpc AddBizDays (UnaryTransformRequest) returns (UnaryDateResponse);
}