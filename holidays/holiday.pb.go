// Code generated by protoc-gen-go. DO NOT EDIT.
// source: holidays/holiday.proto

package holidays // import "github.com/magaldima/bizday/holidays"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import api "github.com/magaldima/bizday/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UnaryDateRequest struct {
	Date                 *api.Date `protobuf:"bytes,1,opt,name=date" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UnaryDateRequest) Reset()         { *m = UnaryDateRequest{} }
func (m *UnaryDateRequest) String() string { return proto.CompactTextString(m) }
func (*UnaryDateRequest) ProtoMessage()    {}
func (*UnaryDateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_holiday_e968e383b95121fd, []int{0}
}
func (m *UnaryDateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnaryDateRequest.Unmarshal(m, b)
}
func (m *UnaryDateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnaryDateRequest.Marshal(b, m, deterministic)
}
func (dst *UnaryDateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnaryDateRequest.Merge(dst, src)
}
func (m *UnaryDateRequest) XXX_Size() int {
	return xxx_messageInfo_UnaryDateRequest.Size(m)
}
func (m *UnaryDateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnaryDateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnaryDateRequest proto.InternalMessageInfo

func (m *UnaryDateRequest) GetDate() *api.Date {
	if m != nil {
		return m.Date
	}
	return nil
}

type BinaryDateRequest struct {
	Start                *api.Date `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End                  *api.Date `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BinaryDateRequest) Reset()         { *m = BinaryDateRequest{} }
func (m *BinaryDateRequest) String() string { return proto.CompactTextString(m) }
func (*BinaryDateRequest) ProtoMessage()    {}
func (*BinaryDateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_holiday_e968e383b95121fd, []int{1}
}
func (m *BinaryDateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinaryDateRequest.Unmarshal(m, b)
}
func (m *BinaryDateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinaryDateRequest.Marshal(b, m, deterministic)
}
func (dst *BinaryDateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinaryDateRequest.Merge(dst, src)
}
func (m *BinaryDateRequest) XXX_Size() int {
	return xxx_messageInfo_BinaryDateRequest.Size(m)
}
func (m *BinaryDateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BinaryDateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BinaryDateRequest proto.InternalMessageInfo

func (m *BinaryDateRequest) GetStart() *api.Date {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *BinaryDateRequest) GetEnd() *api.Date {
	if m != nil {
		return m.End
	}
	return nil
}

type BoolResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BoolResponse) Reset()         { *m = BoolResponse{} }
func (m *BoolResponse) String() string { return proto.CompactTextString(m) }
func (*BoolResponse) ProtoMessage()    {}
func (*BoolResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_holiday_e968e383b95121fd, []int{2}
}
func (m *BoolResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BoolResponse.Unmarshal(m, b)
}
func (m *BoolResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BoolResponse.Marshal(b, m, deterministic)
}
func (dst *BoolResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BoolResponse.Merge(dst, src)
}
func (m *BoolResponse) XXX_Size() int {
	return xxx_messageInfo_BoolResponse.Size(m)
}
func (m *BoolResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BoolResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BoolResponse proto.InternalMessageInfo

func (m *BoolResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*UnaryDateRequest)(nil), "holidays.UnaryDateRequest")
	proto.RegisterType((*BinaryDateRequest)(nil), "holidays.BinaryDateRequest")
	proto.RegisterType((*BoolResponse)(nil), "holidays.BoolResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Holiday service

type HolidayClient interface {
	IsHoliday(ctx context.Context, in *api.Date, opts ...grpc.CallOption) (*BoolResponse, error)
	HolidaysBetween(ctx context.Context, in *BinaryDateRequest, opts ...grpc.CallOption) (*api.NumberOfDaysResponse, error)
}

type holidayClient struct {
	cc *grpc.ClientConn
}

func NewHolidayClient(cc *grpc.ClientConn) HolidayClient {
	return &holidayClient{cc}
}

func (c *holidayClient) IsHoliday(ctx context.Context, in *api.Date, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := grpc.Invoke(ctx, "/holidays.Holiday/IsHoliday", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *holidayClient) HolidaysBetween(ctx context.Context, in *BinaryDateRequest, opts ...grpc.CallOption) (*api.NumberOfDaysResponse, error) {
	out := new(api.NumberOfDaysResponse)
	err := grpc.Invoke(ctx, "/holidays.Holiday/HolidaysBetween", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Holiday service

type HolidayServer interface {
	IsHoliday(context.Context, *api.Date) (*BoolResponse, error)
	HolidaysBetween(context.Context, *BinaryDateRequest) (*api.NumberOfDaysResponse, error)
}

func RegisterHolidayServer(s *grpc.Server, srv HolidayServer) {
	s.RegisterService(&_Holiday_serviceDesc, srv)
}

func _Holiday_IsHoliday_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(api.Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HolidayServer).IsHoliday(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/holidays.Holiday/IsHoliday",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HolidayServer).IsHoliday(ctx, req.(*api.Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _Holiday_HolidaysBetween_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BinaryDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HolidayServer).HolidaysBetween(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/holidays.Holiday/HolidaysBetween",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HolidayServer).HolidaysBetween(ctx, req.(*BinaryDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Holiday_serviceDesc = grpc.ServiceDesc{
	ServiceName: "holidays.Holiday",
	HandlerType: (*HolidayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsHoliday",
			Handler:    _Holiday_IsHoliday_Handler,
		},
		{
			MethodName: "HolidaysBetween",
			Handler:    _Holiday_HolidaysBetween_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "holidays/holiday.proto",
}

func init() { proto.RegisterFile("holidays/holiday.proto", fileDescriptor_holiday_e968e383b95121fd) }

var fileDescriptor_holiday_e968e383b95121fd = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcb, 0xc8, 0xcf, 0xc9,
	0x4c, 0x49, 0xac, 0x2c, 0xd6, 0x87, 0x32, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x38, 0x60,
	0xe2, 0x52, 0x3a, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xb9, 0x89,
	0xe9, 0x89, 0x39, 0x29, 0x99, 0xb9, 0x89, 0xfa, 0x49, 0x99, 0x55, 0x29, 0x89, 0x95, 0xfa, 0x89,
	0x05, 0x99, 0x50, 0x26, 0x44, 0x9f, 0x92, 0x2f, 0x97, 0x40, 0x68, 0x5e, 0x62, 0x51, 0xa5, 0x4b,
	0x62, 0x49, 0x6a, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x25, 0x17, 0x4b, 0x4a, 0x62,
	0x49, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0xb7, 0x91, 0xaa, 0x1e, 0xc2, 0x40, 0x3d, 0xb8, 0x81,
	0x7a, 0x50, 0x53, 0x12, 0x0b, 0x32, 0xf5, 0xc0, 0x7a, 0xc1, 0x5a, 0x94, 0x3a, 0x19, 0xb9, 0x04,
	0x9d, 0x32, 0xd1, 0x0d, 0xb4, 0xe6, 0x62, 0x2d, 0x2e, 0x49, 0x2c, 0x2a, 0x21, 0xcd, 0x44, 0x88,
	0x1e, 0x21, 0x73, 0x2e, 0xe6, 0xd4, 0xbc, 0x14, 0x09, 0x26, 0x52, 0xb4, 0x82, 0x74, 0x28, 0xc9,
	0x71, 0xf1, 0x38, 0xe5, 0xe7, 0xe7, 0x04, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0xf1,
	0x71, 0x31, 0xe5, 0x67, 0x83, 0x9d, 0xc0, 0x11, 0xc4, 0x94, 0x9f, 0x6d, 0xb4, 0x87, 0x91, 0x8b,
	0xdd, 0x03, 0x12, 0x6a, 0x42, 0x5e, 0x5c, 0x9c, 0x9e, 0xc5, 0x30, 0x0e, 0x71, 0x96, 0x48, 0x89,
	0xe9, 0xc1, 0xc2, 0x5c, 0x0f, 0xc5, 0x9e, 0x54, 0x2e, 0x7e, 0xa8, 0x49, 0xc5, 0x4e, 0xa9, 0x25,
	0xe5, 0xa9, 0xa9, 0x79, 0x42, 0xd2, 0x48, 0x4a, 0xd1, 0x43, 0x47, 0xca, 0x94, 0xa0, 0x75, 0x7e,
	0xa5, 0xb9, 0x49, 0xa9, 0x45, 0xfe, 0x69, 0x2e, 0x89, 0x95, 0xc5, 0x30, 0x6b, 0x9c, 0xd4, 0xa2,
	0x54, 0xf0, 0xc5, 0x34, 0xcc, 0xc2, 0x24, 0x36, 0x70, 0x44, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x0e, 0xe7, 0x2c, 0x3a, 0x3a, 0x02, 0x00, 0x00,
}
