// Code generated by protoc-gen-go. DO NOT EDIT.
// source: holiday.proto

/*
Package holidays is a generated protocol buffer package.

It is generated from these files:
	holiday.proto

It has these top-level messages:
	BinaryDateRequest
	BoolResponse
*/
package holidays

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import github_com_magaldima_bizday_api "github.com/magaldima/bizday/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BinaryDateRequest struct {
	Start *github_com_magaldima_bizday_api.Date `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End   *github_com_magaldima_bizday_api.Date `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
}

func (m *BinaryDateRequest) Reset()                    { *m = BinaryDateRequest{} }
func (m *BinaryDateRequest) String() string            { return proto.CompactTextString(m) }
func (*BinaryDateRequest) ProtoMessage()               {}
func (*BinaryDateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BinaryDateRequest) GetStart() *github_com_magaldima_bizday_api.Date {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *BinaryDateRequest) GetEnd() *github_com_magaldima_bizday_api.Date {
	if m != nil {
		return m.End
	}
	return nil
}

type BoolResponse struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *BoolResponse) Reset()                    { *m = BoolResponse{} }
func (m *BoolResponse) String() string            { return proto.CompactTextString(m) }
func (*BoolResponse) ProtoMessage()               {}
func (*BoolResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BoolResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*BinaryDateRequest)(nil), "holidays.BinaryDateRequest")
	proto.RegisterType((*BoolResponse)(nil), "holidays.BoolResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Holiday service

type HolidayClient interface {
	IsHoliday(ctx context.Context, in *github_com_magaldima_bizday_api.Date, opts ...grpc.CallOption) (*BoolResponse, error)
	Delta(ctx context.Context, in *BinaryDateRequest, opts ...grpc.CallOption) (*github_com_magaldima_bizday_api.NumberOfDaysResponse, error)
}

type holidayClient struct {
	cc *grpc.ClientConn
}

func NewHolidayClient(cc *grpc.ClientConn) HolidayClient {
	return &holidayClient{cc}
}

func (c *holidayClient) IsHoliday(ctx context.Context, in *github_com_magaldima_bizday_api.Date, opts ...grpc.CallOption) (*BoolResponse, error) {
	out := new(BoolResponse)
	err := grpc.Invoke(ctx, "/holidays.Holiday/IsHoliday", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *holidayClient) Delta(ctx context.Context, in *BinaryDateRequest, opts ...grpc.CallOption) (*github_com_magaldima_bizday_api.NumberOfDaysResponse, error) {
	out := new(github_com_magaldima_bizday_api.NumberOfDaysResponse)
	err := grpc.Invoke(ctx, "/holidays.Holiday/Delta", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Holiday service

type HolidayServer interface {
	IsHoliday(context.Context, *github_com_magaldima_bizday_api.Date) (*BoolResponse, error)
	Delta(context.Context, *BinaryDateRequest) (*github_com_magaldima_bizday_api.NumberOfDaysResponse, error)
}

func RegisterHolidayServer(s *grpc.Server, srv HolidayServer) {
	s.RegisterService(&_Holiday_serviceDesc, srv)
}

func _Holiday_IsHoliday_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(github_com_magaldima_bizday_api.Date)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HolidayServer).IsHoliday(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/holidays.Holiday/IsHoliday",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HolidayServer).IsHoliday(ctx, req.(*github_com_magaldima_bizday_api.Date))
	}
	return interceptor(ctx, in, info, handler)
}

func _Holiday_Delta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BinaryDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HolidayServer).Delta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/holidays.Holiday/Delta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HolidayServer).Delta(ctx, req.(*BinaryDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Holiday_serviceDesc = grpc.ServiceDesc{
	ServiceName: "holidays.Holiday",
	HandlerType: (*HolidayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsHoliday",
			Handler:    _Holiday_IsHoliday_Handler,
		},
		{
			MethodName: "Delta",
			Handler:    _Holiday_Delta_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "holiday.proto",
}

func init() { proto.RegisterFile("holiday.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0xc8, 0xcf, 0xc9,
	0x4c, 0x49, 0xac, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0x72, 0x8b, 0xa5, 0x74,
	0xd2, 0x33, 0x4b, 0x32, 0x4a, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x73, 0x13, 0xd3, 0x13, 0x73,
	0x52, 0x32, 0x73, 0x13, 0xf5, 0x93, 0x32, 0xab, 0x52, 0x12, 0x2b, 0xf5, 0x13, 0x0b, 0x32, 0xa1,
	0x4c, 0x88, 0x3e, 0xa5, 0x4e, 0x46, 0x2e, 0x41, 0xa7, 0xcc, 0xbc, 0xc4, 0xa2, 0x4a, 0x97, 0xc4,
	0x92, 0xd4, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x6b, 0x2e, 0xd6, 0xe2, 0x92, 0xc4,
	0xa2, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x55, 0x3d, 0x84, 0x99, 0x7a, 0x70, 0x33,
	0xf5, 0xa0, 0x06, 0x25, 0x16, 0x64, 0xea, 0x81, 0x35, 0x43, 0xf4, 0x08, 0x99, 0x73, 0x31, 0xa7,
	0xe6, 0xa5, 0x48, 0x30, 0x91, 0xa2, 0x15, 0xa4, 0x43, 0x49, 0x8e, 0x8b, 0xc7, 0x29, 0x3f, 0x3f,
	0x27, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x88, 0x8f, 0x8b, 0x29, 0x3f, 0x1b, 0xec,
	0x04, 0x8e, 0x20, 0xa6, 0xfc, 0x6c, 0xa3, 0x4d, 0x8c, 0x5c, 0xec, 0x1e, 0x10, 0x6f, 0x0a, 0x79,
	0x71, 0x71, 0x7a, 0x16, 0xc3, 0x38, 0xc4, 0x59, 0x22, 0x25, 0xa6, 0x07, 0x0b, 0x24, 0x3d, 0x14,
	0x7b, 0xa2, 0xb9, 0x58, 0x5d, 0x52, 0x73, 0x4a, 0x12, 0x85, 0xa4, 0x91, 0x14, 0xa0, 0x87, 0x89,
	0x94, 0x29, 0x41, 0x4b, 0xfc, 0x4a, 0x73, 0x93, 0x52, 0x8b, 0xfc, 0xd3, 0x5c, 0x12, 0x2b, 0x8b,
	0x61, 0x86, 0x27, 0xb1, 0x81, 0xc3, 0xd9, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x33, 0x56,
	0x3a, 0xb0, 0x01, 0x00, 0x00,
}
